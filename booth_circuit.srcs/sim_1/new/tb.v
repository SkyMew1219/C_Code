`timescale 1ns / 1ps
module testbench();
    parameter bits = 32;
    reg  signed [bits-1:0] x;
    reg  signed [bits-1:0] y;
    wire  signed [2*bits:1] result;
    
    /*
    initial
    begin
            x = 8'b01010001;
            y = 8'b00010001;
        #20 x = 8'b00010001;
            y = 8'b10010001;
        #20 x = 8'b10010001;
            y = 8'b10101110;
        #20 x = 8'b10101110;
            y = 8'b01010001;
    end
    */
    
    initial
    begin
            x = 32'b00100011010000011101110101011100;
            y = 32'b01110100011001100010111110100010;
        #20 x = 32'b10101011111001010110000010011000;
            y = 32'b11100101110000010111110100111000;
        #20 x = 32'b00111100110110101101111000101101;
            y = 32'b10001010001000000011010110100010;
        #20 x = 32'b11100111101101111010110011001011;
            y = 32'b00111101011100101101111100010110;
    end
    
    initial #100 $finish;
    booth u1(
                .x(x),
                .y(y),
                .result(result)
                );
endmodule
